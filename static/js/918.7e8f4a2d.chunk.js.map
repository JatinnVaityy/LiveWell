{"version":3,"file":"static/js/918.7e8f4a2d.chunk.js","mappings":"wJAEA,MAuDA,EAvDeA,KACb,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CAAEC,IAAI,WAAYC,IAAM,cAC1DC,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAmCnC,OAjCAK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAeC,UACnBC,QAAQC,IAAI,wBACZ,IACE,MAAMC,QAAiBC,MAAM,gDAC7B,IAAKD,EAASE,GAAI,MAAM,IAAIC,MAAM,iCAElC,MAAMC,QAAaJ,EAASK,OAC5BP,QAAQC,IAAI,iBAAkBK,QAERE,IAAlBF,EAAKG,eAA6CD,IAAnBF,EAAKI,WACtCV,QAAQC,IAAI,wBAAyB,CAAER,IAAKa,EAAKG,SAAUf,IAAKY,EAAKI,YACrEnB,EAAY,CAAEE,IAAKa,EAAKG,SAAUf,IAAKY,EAAKI,YAC5Cd,EAAS,QAETI,QAAQW,KAAK,6BAA8BL,GAC3CV,EAAS,qDAEb,CAAE,MAAOgB,GACPZ,QAAQL,MAAM,2BAA4BiB,GAC1ChB,EAAS,kDACX,GAGFE,IACA,MAAMe,EAAWC,YAAYhB,EAAc,KAE3C,MAAO,KACLE,QAAQC,IAAI,2BACZc,cAAcF,EAAS,CACxB,GACA,KAGDG,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,UAAW,SAAUC,UAAW,QAASC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBAEJC,EAAAA,EAAAA,KAAA,UACEC,MAAM,UACNC,MAAM,OACNC,OAAO,MACPC,IAAK,wDAAwDnC,EAASI,IAAM,OAAQJ,EAASG,IAAM,OAAQH,EAASI,IAAM,OAAQJ,EAASG,IAAM,2BAA4BH,EAASG,OAAOH,EAASI,MACtMuB,MAAO,CAAES,OAAQ,sBAEnBV,EAAAA,EAAAA,MAAA,KAAAI,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,IAAE9B,EAASG,QACxCuB,EAAAA,EAAAA,MAAA,KAAAI,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eAAmB,IAAE9B,EAASI,OACxCC,IAAS0B,EAAAA,EAAAA,KAAA,KAAGJ,MAAO,CAAEU,MAAO,OAAQP,SAAEzB,MACnC,C","sources":["views/GPSlocation.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst GPSMap = () => {\r\n  const [position, setPosition] = useState({ lat:19.0819638, lng:  72.8887764 });\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchGPSData = async () => {\r\n      console.log(\"Fetching GPS data...\");\r\n      try {\r\n        const response = await fetch(\"http://192.168.186.32:5000/get-location-data\");\r\n        if (!response.ok) throw new Error(\"Failed to fetch location data\");\r\n\r\n        const data = await response.json();\r\n        console.log(\"Received Data:\", data);\r\n\r\n        if (data.latitude !== undefined && data.longitude !== undefined) {\r\n          console.log(\"Updating position to:\", { lat: data.latitude, lng: data.longitude });\r\n          setPosition({ lat: data.latitude, lng: data.longitude });\r\n          setError(null);\r\n        } else {\r\n          console.warn(\"Invalid GPS data received:\", data);\r\n          setError(\"Invalid GPS data received, using default location\");\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching GPS data:\", err);\r\n        setError(\"Error fetching GPS data, using default location\");\r\n      }\r\n    };\r\n\r\n    fetchGPSData();\r\n    const interval = setInterval(fetchGPSData, 10000);\r\n\r\n    return () => {\r\n      console.log(\"Clearing fetch interval\");\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n      <h2>Live GPS Location</h2>\r\n\r\n      <iframe\r\n        title=\"gps-map\"\r\n        width=\"100%\"\r\n        height=\"500\"\r\n        src={`https://www.openstreetmap.org/export/embed.html?bbox=${position.lng - 0.01},${position.lat - 0.01},${position.lng + 0.01},${position.lat + 0.01}&layer=mapnik&marker=${position.lat},${position.lng}`}\r\n        style={{ border: \"1px solid black\" }}\r\n      ></iframe>\r\n      <p><strong>Latitude:</strong> {position.lat}</p>\r\n      <p><strong>Longitude:</strong> {position.lng}</p>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GPSMap;\r\n"],"names":["GPSMap","position","setPosition","useState","lat","lng","error","setError","useEffect","fetchGPSData","async","console","log","response","fetch","ok","Error","data","json","undefined","latitude","longitude","warn","err","interval","setInterval","clearInterval","_jsxs","style","textAlign","marginTop","children","_jsx","title","width","height","src","border","color"],"sourceRoot":""}