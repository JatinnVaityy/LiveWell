{"version":3,"file":"static/js/179.14c8971d.chunk.js","mappings":"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","sources":["views/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./PatientForm.css\";\r\n\r\nconst PatientForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    dob: \"\",\r\n    gender: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    bloodType: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    allergies: \"\",\r\n    medications: \"\",\r\n    chronicConditions: \"\",\r\n    emergencyContactName: \"\",\r\n    emergencyRelationship: \"\",\r\n    emergencyPhone: \"\",\r\n    preferredHospital: \"\",\r\n  });\r\n\r\n  const [selectedSection, setSelectedSection] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const sections = [\"Patient Information\", \"Health Information\", \"Emergency Contact\"];\r\n\r\n  useEffect(() => {\r\n    const savedData = localStorage.getItem(\"patientReport\");\r\n    if (savedData) {\r\n      setFormData(JSON.parse(savedData));\r\n      setSubmitted(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const requiredFields = [\"firstName\", \"lastName\", \"dob\", \"gender\", \"phone\", \"email\", \"emergencyContactName\", \"emergencyPhone\"];\r\n    for (let field of requiredFields) {\r\n      if (!formData[field]) {\r\n        alert(`Please fill in the required field: ${field}`);\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/submit\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Failed to save data\");\r\n      }\r\n\r\n      localStorage.setItem(\"patientReport\", JSON.stringify(formData));\r\n      setSubmitted(true);\r\n      alert(\"Patient data submitted successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error sending data:\", error);\r\n      alert(\"Error submitting data.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setSubmitted(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"patientReport\");\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Patient Profile</h2>\r\n\r\n      {submitted ? (\r\n        <div className=\"summary\">\r\n          <h3>Patient Summary</h3>\r\n          {Object.entries(formData).map(([key, value]) => (\r\n            <p key={key}>\r\n              <strong>{key.replace(/([A-Z])/g, \" $1\")}: </strong> {value || \"N/A\"}\r\n            </p>\r\n          ))}\r\n          <button onClick={handleEdit}>Edit Information</button>\r\n        \r\n        </div>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          <h3>{sections[selectedSection]}</h3>\r\n\r\n          {selectedSection === 0 && (\r\n            <div className=\"form-section\">\r\n              <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleChange} placeholder=\"First Name\" required />\r\n              <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleChange} placeholder=\"Last Name\" required />\r\n              <input type=\"date\" name=\"dob\" value={formData.dob} onChange={handleChange} required />\r\n              <select name=\"gender\" value={formData.gender} onChange={handleChange} required>\r\n                <option value=\"\">Select Gender</option>\r\n                <option value=\"Male\">Male</option>\r\n                <option value=\"Female\">Female</option>\r\n              </select>\r\n              <input type=\"text\" name=\"phone\" value={formData.phone} onChange={handleChange} placeholder=\"Phone Number\" required />\r\n              <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} placeholder=\"Email\" required />\r\n            </div>\r\n          )}\r\n\r\n          {selectedSection === 1 && (\r\n            <div className=\"form-section\">\r\n              <input type=\"text\" name=\"bloodType\" value={formData.bloodType} onChange={handleChange} placeholder=\"Blood Type\" />\r\n              <input type=\"number\" name=\"height\" value={formData.height} onChange={handleChange} placeholder=\"Height (cm)\" />\r\n              <input type=\"number\" name=\"weight\" value={formData.weight} onChange={handleChange} placeholder=\"Weight (kg)\" />\r\n              <textarea name=\"allergies\" value={formData.allergies} onChange={handleChange} placeholder=\"List any allergies\"></textarea>\r\n              <textarea name=\"medications\" value={formData.medications} onChange={handleChange} placeholder=\"Current Medications\"></textarea>\r\n              <textarea name=\"chronicConditions\" value={formData.chronicConditions} onChange={handleChange} placeholder=\"Chronic Conditions\"></textarea>\r\n            </div>\r\n          )}\r\n\r\n          {selectedSection === 2 && (\r\n            <div className=\"form-section\">\r\n              <input type=\"text\" name=\"emergencyContactName\" value={formData.emergencyContactName} onChange={handleChange} placeholder=\"Contact Name\" required />\r\n              <input type=\"text\" name=\"emergencyRelationship\" value={formData.emergencyRelationship} onChange={handleChange} placeholder=\"Relationship\" />\r\n              <input type=\"text\" name=\"emergencyPhone\" value={formData.emergencyPhone} onChange={handleChange} placeholder=\"Emergency Phone\" required />\r\n              <input type=\"text\" name=\"preferredHospital\" value={formData.preferredHospital} onChange={handleChange} placeholder=\"Preferred Hospital\" />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"button-group\">\r\n            {selectedSection > 0 && (\r\n              <button type=\"button\" className=\"prev-btn\" onClick={() => setSelectedSection(selectedSection - 1)}>\r\n                Previous\r\n              </button>\r\n            )}\r\n            {selectedSection < sections.length - 1 ? (\r\n              <button type=\"button\" className=\"next-btn\" onClick={() => setSelectedSection(selectedSection + 1)}>\r\n                Next\r\n              </button>\r\n            ) : (\r\n              <button type=\"submit\" disabled={loading}>\r\n                {loading ? \"Submitting...\" : \"Submit\"}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientForm;\r\n"],"names":["PatientForm","formData","setFormData","useState","firstName","lastName","dob","gender","phone","email","bloodType","height","weight","allergies","medications","chronicConditions","emergencyContactName","emergencyRelationship","emergencyPhone","preferredHospital","selectedSection","setSelectedSection","loading","setLoading","submitted","setSubmitted","sections","useEffect","savedData","localStorage","getItem","JSON","parse","handleChange","e","target","name","value","_jsxs","className","children","_jsx","Object","entries","map","_ref","key","replace","onClick","handleEdit","onSubmit","async","preventDefault","validateForm","requiredFields","field","alert","response","fetch","method","headers","body","stringify","data","json","ok","Error","error","setItem","console","type","onChange","placeholder","required","length","disabled"],"sourceRoot":""}